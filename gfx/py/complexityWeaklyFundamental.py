#!/usr/bin/python3
# number of output figures = 4

import numpy as np

from helper.figure import Figure
import helper.plot



data = {
  0.05 : {
    2 : [
      [99, 99, 116, 2116],
      [199, 201, 260, 6084],
      [399, 401, 563, 20164],
      [799, 818, 1293, 70756],
      [1598, 1634, 2993, 224672],
      [3199, 3273, 6476, 719104],
      [6398, 6572, 14550, 2439840],
      [12799, 13051, 31260, 7573504],
    ],
    3 : [
      [123, 123, 123, 5832],
      [198, 198, 226, 27000],
      [397, 400, 483, 97336],
      [799, 810, 1174, 512000],
      [1600, 1621, 3019, 3329408],
      [3196, 3297, 6898, 20871128],
      [6397, 6609, 15136, 80621568],
      [12798, 13059, 30209, 344960000],
    ],
    4 : [
      [368, 368, 368, 104976],
      [400, 400, 422, 234256],
      [797, 797, 1310, 4477456],
      [1599, 1620, 3030, 25380864],
      [3197, 3232, 4856, 62695424],
      [6400, 6563, 14447, 834978816],
      [12799, 13117, 38526, 10883911680],
    ],
  },
  0.15 : {
    2 : [
      [99, 99, 129, 2600],
      [199, 207, 322, 8772],
      [400, 457, 969, 24300],
      [797, 917, 2533, 80620],
      [1597, 1810, 6375, 259056],
      [3198, 3648, 16000, 938960],
      [6400, 7310, 43181, 3515616],
      [12798, 14446, 106436, 12110396],
    ],
    3 : [
      [123, 123, 123, 5832],
      [198, 198, 232, 32768],
      [398, 410, 680, 269080],
      [796, 842, 1766, 1856376],
      [1599, 1726, 4418, 12665856],
      [3197, 3797, 16327, 38766976],
      [6400, 9285, 86010, 257138368],
      [12799, 18944, 264672, 1642904992],
    ],
    4 : [
      [368, 368, 368, 104976],
      [400, 400, 433, 331776],
      [799, 814, 1527, 9132032],
      [1600, 1696, 3902, 64737360],
      [3199, 3409, 10613, 912651264],
      [6398, 6761, 24946, 12093235200],
      [12795, 15390, 99178, 74185113600],
    ],
  },
  0.25 : {
    2 : [
      [98, 107, 143, 2816],
      [198, 223, 333, 10332],
      [399, 809, 1725, 24568],
      [798, 1456, 4948, 92412],
      [1598, 2403, 10752, 306916],
      [3197, 4389, 27230, 1001992],
    ],
    3 : [
      [123, 123, 123, 5832],
      [200, 200, 262, 51840],
      [400, 459, 901, 514008],
      [797, 899, 2308, 3892504],
      [1597, 3333, 15212, 13144256],
      [3199, 22072, 183846, 60850944],
    ],
    4 : [
      [368, 368, 368, 104976],
      [400, 400, 460, 614656],
      [799, 913, 2047, 16613376],
      [1596, 1809, 5819, 318767104],
      [3198, 3628, 14977, 5796689920],
    ],
  },
}
data = {gamma : {d : np.array(data[gamma][d]) for d in data[gamma]}
        for gamma in data}



ds = [2, 3, 4]
gammas = [0.05, 0.15, 0.25]
lineStyles = {2 : ".-", 3 : "s--"}
colors = {2 : "C0", 3 : "C1", 4 : "C2"}

for gamma in gammas:
  fig = Figure.create(figsize=(2.2, 2.5))
  ax = fig.gca()
  
  for d in ds:
    A = np.array(data[gamma][d])
    Ns = data[gamma][d][:,0]
    
    for j in [2, 3]:
      y = data[gamma][d][:,j] / Ns
      kwargs = {}
      if lineStyles[j][0] != ".": kwargs["markerSize"] = 3
      ax.plot(Ns, y, lineStyles[j], color=colors[d], clip_on=False,
              **kwargs)
  
  ax.set_xscale("log")
  ax.set_yscale("log")
  
  ax.set_xlim(9e1, (4e3 if gamma == 0.25 else 2e4))
  ax.set_ylim(1e0, 1e7)
  
  trafo = helper.plot.getTransformationFromUnitCoordinates(ax)
  x = (0.9 if gamma == 0.25 else 0.65)
  ax.text(*trafo(x, -0.05), r"$\ngpMax$", ha="center", va="top")
  ax.text(*trafo(0.05, 1), "Ratio of\ngrid sizes", rotation=90,
          ha="left", va="top")
  
  fig.save()



fig = Figure.create(figsize=(7, 5))
ax = fig.gca()

labels = {
  2 : r"With chains ($\bspl[\wfs,\nak]{\*l,\*i}{p}$)",
  3 : r"Full grid ($\bspl[\nak]{\*l,\*i}{p}$)",
}

helper.plot.addCustomLegend(ax, (
  [{
    "label"  : "$d = {}$".format(ds[r]),
    "ls"     : "-",
    "color"  : "C{}".format(r),
  } for r in range(len(ds))] +
  [{
    "label"  : labels[j],
    "marker" : lineStyles[j][0],
    "ms"     : (6 if lineStyles[j][0] == "." else 3),
    "ls"     : lineStyles[j][1:],
    "color"  : "k",
  } for j in [2, 3]]
), ncol=5, loc="upper center", outside=True)

ax.set_axis_off()

fig.save()
