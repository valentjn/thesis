#!/usr/bin/python3

import os
import pathlib
import subprocess
import sys
from typing import Any, Dict



# basically environment[key] = value
def setEnvironment(environment: Dict[str, Any], key: str, value: str) -> None:
  print(f"Using environment variable {key} = {value}")
  environment[key] = value



# basically environment[key] = paths[0] + ":" + paths[1] + ":" + ... + ":" + environment[key]
def prependPathsToEnvironment(environment: Dict[str, Any], key: str, *paths: pathlib.Path) -> None:
  value = ":".join([str(path.resolve()) for path in paths] + [environment.get(key, "")])
  setEnvironment(environment, key, value)



def main() -> None:
  rootDirPath = pathlib.Path(__file__).parent.parent
  environment = dict(os.environ)

  rootDirPathStr = str(rootDirPath.resolve())
  assert "thesis" in rootDirPathStr, \
      f"The path '{rootDirPathStr}' to the root of the repository must contain " \
      "'thesis' in order for the scripts to work properly " \
      "(e.g., use 'thesis' as the name of the repository folder)."

  # set BUILD_DIR
  # (necessary for the gfx script to know where to save the output PDFs)
  buildDirPath = rootDirPath / "build" / "gfx"
  buildDirPath.mkdir(parents=True, exist_ok=True)
  setEnvironment(environment, "BUILD_DIR", str(buildDirPath.resolve()))

  # set LD_LIBRARY_PATH
  # (necessary for gfx scripts with dependencies to pysgpp)
  prependPathsToEnvironment(environment, "LD_LIBRARY_PATH", rootDirPath / "lib")

  # set PYTHONPATH
  # (necessary for import of helper scripts in py/helper and
  # for gfx scripts with dependencies to pysgpp)
  prependPathsToEnvironment(environment, "PYTHONPATH",
        rootDirPath / "py",
        rootDirPath / "gfx" / "py",
        rootDirPath / "lib",
        rootDirPath / "lib" / "pysgpp",
      )

  # set TEXINPUTS
  # (necessary as the output PDFs are generated by LaTeX, which in turn uses some
  # *.tex files from the preamble of the thesis to ensure consistent appearance;
  # note: if you set this by hand, make sure to include at least one colon before or after
  # the tex paths, it doesn't work without the colon as the colon is substituted with
  # default paths from the LaTeX distribution)
  prependPathsToEnvironment(environment, "TEXINPUTS", rootDirPath / "tex")

  # run gfx script
  arguments = [sys.executable] + sys.argv[1:]
  print(f"Running {arguments}")
  subprocess.run(arguments, env=environment, check=True)



if __name__ == "__main__":
  main()
